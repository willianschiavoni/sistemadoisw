<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Unidade extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Unidade_model');
    } 

    /*
     * Listing of unidades
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('unidade/index?');
        $config['total_rows'] = $this->Unidade_model->get_all_unidades_count();
        $this->pagination->initialize($config);

        $data['unidades'] = $this->Unidade_model->get_all_unidades($params);
        
        $data['_view'] = 'unidade/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new unidade
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('descricao','Descricao','max_length[45]');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'descricao' => $this->input->post('descricao'),
            );
            
            $unidade_id = $this->Unidade_model->add_unidade($params);
            redirect('unidade/index');
        }
        else
        {            
            $data['_view'] = 'unidade/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a unidade
     */
    function edit($IDUnidades)
    {   
        // check if the unidade exists before trying to edit it
        $data['unidade'] = $this->Unidade_model->get_unidade($IDUnidades);
        
        if(isset($data['unidade']['IDUnidades']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('descricao','Descricao','max_length[45]');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'descricao' => $this->input->post('descricao'),
                );

                $this->Unidade_model->update_unidade($IDUnidades,$params);            
                redirect('unidade/index');
            }
            else
            {
                $data['_view'] = 'unidade/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The unidade you are trying to edit does not exist.');
    } 

    /*
     * Deleting unidade
     */
    function remove($IDUnidades)
    {
        $unidade = $this->Unidade_model->get_unidade($IDUnidades);

        // check if the unidade exists before trying to delete it
        if(isset($unidade['IDUnidades']))
        {
            $this->Unidade_model->delete_unidade($IDUnidades);
            redirect('unidade/index');
        }
        else
            show_error('The unidade you are trying to delete does not exist.');
    }
    
}
